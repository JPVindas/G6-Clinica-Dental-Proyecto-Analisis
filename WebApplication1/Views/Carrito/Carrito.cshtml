@model List<WebApplication1.Models.CarritoItemModel>
@using System.Globalization

@{
    ViewData["Title"] = "Carrito de Compras";

    decimal subtotalGeneral = 0;
    decimal impuestosGeneral = 0;
    decimal totalGeneral = 0;
}

<input type="hidden" id="user-id" value="@ViewBag.IdPaciente" />

<div class="cart-container mt-2">
    <div class="card shadow-lg" style="border-radius: 10px;">
        <div class="card-header text-white text-center" style="background-color: #003366; font-size: 1.5rem;">
            Tus Ítems en el Carrito
        </div>

        <div class="card-body" style="color: #003366; padding-top:0px;">
            @if (Model != null && Model.Any())
            {


                <!-- 🔹 Tabla con scroll -->
                <div class="table-container mt-3">
                    <div class="table-scroll">
                        <table class="table table-striped text-center align-middle mb-0">
                            <thead style="background-color: #003366; color: #FFFFFF;">
                                <tr>
                                    <th>Imagen</th>
                                    <th>Nombre</th>
                                    <th>Cantidad</th>
                                    <th>Precio Unitario</th>
                                    <th>Impuestos</th>
                                    <th>Total</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    string nombreItem, imagenUrl;
                                    if (item.Tipo == "producto" && item.Producto != null)
                                    {
                                        nombreItem = item.Producto.Nombre ?? "Producto sin nombre";
                                        imagenUrl = string.IsNullOrEmpty(item.Producto.UrlImagen)
                                        ? Url.Content("~/images/default-product.jpg")
                                        : Url.Content(item.Producto.UrlImagen);
                                    }
                                    else if (item.Tipo == "servicio" && item.Servicio != null)
                                    {
                                        nombreItem = item.Servicio.Nombre ?? "Servicio sin nombre";
                                        imagenUrl = string.IsNullOrEmpty(item.Servicio.UrlImagen)
                                        ? Url.Content("~/images/default-product.jpg")
                                        : Url.Content(item.Servicio.UrlImagen);
                                    }
                                    else
                                    {
                                        nombreItem = "Ítem desconocido";
                                        imagenUrl = Url.Content("~/images/default-product.jpg");
                                    }

                                    decimal subtotalLinea = item.PrecioUnitario * item.Cantidad;
                                    decimal impuestosLinea = item.Impuestos;
                                    decimal totalLinea = subtotalLinea + impuestosLinea;

                                    subtotalGeneral += subtotalLinea;
                                    impuestosGeneral += impuestosLinea;
                                    totalGeneral += totalLinea;

                                    <tr>
                                        <td>
                                            <img src="@imagenUrl"
                                                 alt="@nombreItem"
                                                 style="width: 80px; height: auto; border-radius: 8px;" />
                                        </td>
                                        <td>@nombreItem</td>
                                        <td>@item.Cantidad</td>
                                        <td>₡@item.PrecioUnitario.ToString("N2", CultureInfo.InvariantCulture)</td>
                                        <td>₡@impuestosLinea.ToString("N2", CultureInfo.InvariantCulture)</td>
                                        <td>₡@totalLinea.ToString("N2", CultureInfo.InvariantCulture)</td>
                                        <td>
                                            <button class="btn btn-danger btn-sm btn-lg px-3 py-2 remove-from-cart"
                                                    data-id="@item.IdCarritoItem">
                                                <i class="bi bi-trash"></i> Eliminar
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- 🔹 Totales y botones arriba -->
                <div class="row justify-content-center align-items-start mt-4 gx-5 gy-4">
                    <!-- Columna de totales -->
                    <div class="col-12 col-md-6">
                        <div class="totales-box p-4 rounded shadow-sm bg-light h-100">
                            <p class="mb-2 fw-semibold fs-5">Subtotal: <span class="text-dark">₡@subtotalGeneral.ToString("N2", CultureInfo.InvariantCulture)</span></p>
                            <p class="mb-2 fw-semibold fs-5">Impuestos: <span class="text-dark">₡@impuestosGeneral.ToString("N2", CultureInfo.InvariantCulture)</span></p>
                            <h4 class="mt-3 fw-bold text-primary">Total: ₡@totalGeneral.ToString("N2", CultureInfo.InvariantCulture)</h4>
                        </div>
                    </div>

                    <!-- Columna de botones -->
                    <div class="col-12 col-md-3 d-flex flex-column gap-3 align-self-center">
                        <form asp-action="VaciarCarrito" asp-controller="Carrito" method="post">
                            <button type="submit" class="btn btn-danger btn-lg fw-bold w-100">
                                <i class="bi bi-trash3-fill"></i> Vaciar Carrito
                            </button>
                        </form>

                        <form asp-action="Checkout" asp-controller="Carrito" method="get">
                            <button type="submit" class="btn btn-success btn-lg fw-bold w-100">
                                <i class="bi bi-credit-card-fill"></i> Proceder al Pago
                            </button>
                        </form>
                    </div>

                </div>
            }
            else
            {
                <div class="text-center fw-bold text-danger mt-4">
                    <h5>No hay productos o servicios en el carrito.</h5>
                </div>
            }
        </div>
    </div>
</div>



<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" />

<style>
    .cart-container {
        margin-top: 20px;
        background-color: #F8F9FA;
        padding: 30px;
        border-radius: 16px;
    }

    .btn-danger, .btn-success {
        font-weight: bold;
        font-size: 1.1rem;
        padding: 12px 24px;
        border-radius: 10px;
        min-width: 230px;
        transition: all 0.3s ease-in-out;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-danger {
        background-color: #dc3545 !important;
        border-color: #dc3545 !important;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #c82333 !important;
            border-color: #bd2130 !important;
            transform: scale(1.05);
        }

    .btn-success {
        background-color: #28a745 !important;
        border-color: #28a745 !important;
        color: #fff;
    }

        .btn-success:hover {
            background-color: #218838 !important;
            border-color: #1e7e34 !important;
            transform: scale(1.05);
        }

    .totales-box {
        background-color: #ffffff;
        border: 1px solid #dee2e6;
        padding: 25px;
        border-radius: 16px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        transition: transform 0.3s ease-in-out;
    }

        .totales-box:hover {
            transform: scale(1.015);
        }

    .table-container {
        max-height: 240px; /* ANTES: aprox. 3 filas */
        overflow-y: auto;
        border: 1px solid #dee2e6;
        border-radius: 12px;
    }





    .table-scroll {
        min-width: 1000px;
    }

    .table th,
    .table td {
        vertical-align: middle !important;
        font-size: 0.95rem;
    }

    .table img {
        max-width: 80px;
        height: auto;
        border-radius: 8px;
    }

    .remove-from-cart {
        font-size: 0.9rem;
        padding: 10px 16px;
        border-radius: 8px;
    }

    /* Scroll personalizado */
    .table-container::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    .table-container::-webkit-scrollbar-thumb {
        background-color: #c0c0c0;
        border-radius: 4px;
    }

    @@media (max-width: 768px) {
        .btn-lg {
            min-width: 100%;
            font-size: 1rem;
        }

        .d-flex.flex-md-row {
            flex-direction: column !important;
        }

        .table-scroll {
            min-width: unset;
        }

        .totales-box {
            padding: 20px;
        }
    }
</style>





<script>
    document.addEventListener("DOMContentLoaded", function () {
        const clearCartButton = document.getElementById("clear-cart");
        const userIdElement = document.getElementById("user-id");
        let idPaciente = userIdElement ? userIdElement.value.trim() : "";

        if (!idPaciente) {
            console.warn("⚠️ No se detectó el ID del paciente para las operaciones del carrito.");
            return;
        }

        // Vaciar el carrito
        if (clearCartButton) {
            clearCartButton.addEventListener("click", async function () {
                if (!confirm("¿Estás seguro de vaciar el carrito?")) return;
                try {
                    let response = await fetch("/Carrito/VaciarCarrito", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ idPaciente: idPaciente })
                    });
                    if (!response.ok) throw new Error(`HTTP error: ${response.status}`);
                    location.reload();
                } catch (error) {
                    console.error("❌ Error al vaciar el carrito:", error);
                    alert("❌ Hubo un problema al vaciar el carrito.");
                }
            });
        }

        // Eliminar (o restar) un ítem del carrito
        document.body.addEventListener("click", async function (event) {
            const removeBtn = event.target.closest(".remove-from-cart");
            if (!removeBtn) return;
            const idCarritoItem = removeBtn.dataset.id;
            if (!confirm("¿Seguro que deseas eliminar una unidad de este ítem?")) return;
            try {
                let response = await fetch("/Carrito/EliminarItem", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: new URLSearchParams({ idCarritoItem: idCarritoItem })
                });
                if (!response.ok) throw new Error(`HTTP error: ${response.status}`);
                location.reload();
            } catch (error) {
                console.error("❌ Error al eliminar el ítem:", error);
                alert("❌ Ocurrió un error al eliminar el ítem.");
            }
        });
    });

</script>
