@model List<WebApplication1.Models.ProductosModel>
@using System.Security.Claims
@using System.Globalization

@{
    ViewData["Title"] = "Productos";
    var userRole = User.Claims.FirstOrDefault(c =>
        c.Type == ClaimTypes.Role || c.Type.Contains("rol", StringComparison.OrdinalIgnoreCase))?.Value ?? "0";
}

<div class="jumbotron text-center">
    <h1 class="display-4">¡Bienvenido a los Productos!</h1>
    <p class="lead">Aquí podrás encontrar nuestros productos disponibles.</p>
</div>

<div class="container mt-4">
    @if (userRole == "1" || userRole == "2")
    {
        <div class="mb-4 d-flex justify-content-center">
            <a asp-action="AgregarProducto" class="btn btn-primary btn-lg w-100">
                <i class="bi bi-plus-circle"></i> Agregar Producto
            </a>
        </div>
    }

    <div class="row">
        @foreach (var producto in Model)
        {
            var imageUrl = string.IsNullOrEmpty(producto.UrlImagen) ? Url.Content("~/images/default-product.jpg") : Url.Content(producto.UrlImagen);

            <div class="col-lg-4 col-md-6 mb-4">
                <div class="card shadow-lg h-100">
                    <img src="@imageUrl" class="card-img-top" alt="@producto.Nombre" style="height: 200px; object-fit: cover;">
                    <div class="card-body text-center d-flex flex-column justify-content-between">
                        <h5 class="card-title">@producto.Nombre</h5>
                        <p class="card-text text-muted">@producto.Descripcion</p>
                        <p class="fw-bold text-primary">₡@producto.Precio.ToString("N0", CultureInfo.InvariantCulture)</p>

                        <button class="btn btn-primary btn-md w-100 add-to-cart"
                                data-id="@producto.Id"
                                data-name="@producto.Nombre"
                                data-price="@producto.Precio"
                                data-image="@imageUrl"
                                aria-label="Agregar @producto.Nombre al carrito">
                            <i class="bi bi-cart-plus-fill"></i> Agregar al Carrito
                        </button>

                        @if (userRole == "1" || userRole == "2")
                        {
                            <div class="mt-2 d-flex justify-content-between">
                                <a asp-action="EditarProducto" asp-route-id="@producto.Id" class="btn btn-warning btn-md w-50 me-2"
                                   aria-label="Editar @producto.Nombre">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                <a asp-action="EliminarProducto" asp-route-id="@producto.Id" class="btn btn-danger btn-md w-50"
                                   onclick="return confirm('¿Estás seguro de que deseas eliminar este producto?');"
                                   aria-label="Eliminar @producto.Nombre">
                                    <i class="bi bi-trash"></i>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
    .card {
        border-radius: 12px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.15);
    }

    .card-img-top {
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
    }

    .btn {
        transition: 0.3s ease-in-out;
        border-width: 2px;
    }

    .btn-primary {
        background-color: #003366 !important;
        border-color: #003366 !important;
    }

    .btn-warning {
        background-color: #ffc107 !important;
        border-color: #ffc107 !important;
    }

    .btn-danger {
        background-color: #dc3545 !important;
        border-color: #dc3545 !important;
    }

    .btn-success {
        background-color: #28a745 !important;
        border-color: #28a745 !important;
    }
</style>

<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const cartBadge = document.getElementById("cart-badge");
        let isAddingToCart = false;

        async function updateCartBadge() {
            if (!cartBadge) return;

            try {
                let response = await fetch("/Carrito/Carrito");
                if (!response.ok) throw new Error(`Error HTTP: ${response.status}`);

                let contentType = response.headers.get("content-type");
                if (!contentType || !contentType.includes("application/json")) {
                    console.error("❌ Error: El servidor devolvió HTML en lugar de JSON.");
                    return;
                }

                let data = await response.json();
                cartBadge.textContent = data.cantidadCarrito ?? "0"; 
            } catch (error) {
                console.error("❌ Error al actualizar el carrito:", error);
            }
        }

        updateCartBadge();

        document.body.addEventListener("click", async function (event) {
            const addBtn = event.target.closest(".add-to-cart");
            if (addBtn) {
                event.preventDefault();
                event.stopPropagation();

                if (isAddingToCart) return; 

                isAddingToCart = true;
                addBtn.setAttribute("disabled", "true"); 

                await handleAddToCart(addBtn);

                addBtn.removeAttribute("disabled"); 
                isAddingToCart = false;
            }
        });

        async function addToCart(id, nombre, precio, imagen) {
            id = parseInt(id);
            precio = parseFloat(precio);

            if (!id || !nombre || isNaN(precio)) {
                console.warn("⚠️ Datos inválidos al intentar agregar al carrito:", { id, nombre, precio });
                alert("⚠️ Datos inválidos. No se pudo agregar al carrito.");
                return;
            }

            try {
                console.log(`🛒 Enviando solicitud para agregar: ${nombre}`);
                let response = await fetch("/Carrito/AgregarProdu", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({
                        IdProducto: id,
                        Tipo: "producto",
                        Nombre: nombre,
                        Cantidad: 1
                    }),
                });

                if (!response.ok) throw new Error(`Error HTTP: ${response.status}`);

                const data = await response.json();
                await updateCartBadge();

                alert(`✅ ${nombre} agregado al carrito.`);
            } catch (error) {
                console.error("❌ Error de red:", error);
                alert("❌ Hubo un problema al agregar el producto. Inténtalo nuevamente.");
            }
        }

        async function handleAddToCart(button) {
            console.log(`🛒 Intentando agregar: ${button.dataset.name}`);

            await addToCart(
                button.dataset.id,
                button.dataset.name,
                button.dataset.price,
                button.dataset.image
            );
        }
    });
</script>
